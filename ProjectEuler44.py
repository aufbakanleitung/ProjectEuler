"""
Pentagon numbers

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""
import math


def pentagonal_number_generator(amount):
    pn_list = []
    for n in range(1, amount+1):
        pn_list.append(int((n * (3 * n -1)) / 2))
    return pn_list

pent_list = pentagonal_number_generator(10000)


def is_pentagonal(Pn):
    n = (0.5 + math.sqrt(0.25 + 6 * Pn))/3
    return n % 1 == 0


def check_number_distance(pent_list):
    for a in range(len(pent_list)):
        for b in range(a-1, 1, -1):
            pent_difference = pent_list[a] - pent_list[b]
            pent_sum = pent_list[a] + pent_list[b]
            if is_pentagonal(pent_difference) and is_pentagonal(pent_sum):
                print("p", a+1, pent_list[a], "± p", b+1, pent_list[b], " Difference:", pent_difference)

check_number_distance(pent_list)

"""
for pentagonnr in pentagonal_number_generator(100):
    print(a, "is Pentagonal", is_pentagonal(a))
"""